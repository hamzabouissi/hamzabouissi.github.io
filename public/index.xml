<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>chown u&#43;r mind</title>
    <link>//localhost:1313/</link>
    <description>Recent content on chown u&#43;r mind</description>
    <image>
      <title>chown u&#43;r mind</title>
      <url>//localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>//localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.132.2</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Aug 2024 14:42:01 +0100</lastBuildDate>
    <atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Transform AWS Exam Generator Architecture to Open Source Part #5: Authentication and Emailing</title>
      <link>//localhost:1313/posts/transform-aws-5/</link>
      <pubDate>Mon, 12 Aug 2024 14:42:01 +0100</pubDate>
      <guid>//localhost:1313/posts/transform-aws-5/</guid>
      <description>Introduction In this article, we’re going to replace the Cognito Service, I choose the Kratos and Oathkeeper from Ory as alternative.
The main functionalities of Congito here, is offering a way to sign in, sign up with or without SSO, email verification and use Sesssion Web Token for Frontend authorization.
Here is the full architecture of authentication and authorization
Don&amp;rsquo;t worry if didnt understand the architecture, we will dig deeper in the next headlines</description>
    </item>
    <item>
      <title>Transform AWS Exam Generator Architecture to Open Source Part #4: Exam Passing</title>
      <link>//localhost:1313/posts/transform-aws-4/</link>
      <pubDate>Mon, 12 Aug 2024 14:40:10 +0100</pubDate>
      <guid>//localhost:1313/posts/transform-aws-4/</guid>
      <description>Brief Description In this article, we create the passing part of the exam, the architecture is composed of:
kubernetes service for Taking Exam UI. Knative service for taking exams. MongoDb for storing student answers. KafkaConnect to capture changed data on MongoDb and move it to a KafkaTopic. Knative service for calculating the scoreboard and send it into a topic. We will follow the same approach in the previous article, we tackle dependency-free services first.</description>
    </item>
    <item>
      <title>Transform AWS Exam Generator Architecture to Open Source Part #3: Exam Generation</title>
      <link>//localhost:1313/posts/transform-aws-3/</link>
      <pubDate>Mon, 12 Aug 2024 14:40:08 +0100</pubDate>
      <guid>//localhost:1313/posts/transform-aws-3/</guid>
      <description>Brief description In this part we should talk about:
Kafka topics and difference of deploying between zookeeper and kraft. Create Minio cluster and k8s jobs for adding event notification Knative installation and the invocation with Kafka topics. Hosting of generate-exam frontend in k8s services with ingress, subdomain and reference the WebSocket service. Current Stack I have a K8s cluster composed of three nodes (1 master, 2 control plane) with Talos as the running OS, MetalLB deployed as a load balancer combined with Nginx (nginx.</description>
    </item>
    <item>
      <title>Transform AWS Exam Generator Architecture to Open Source Part #2: Research and Planning</title>
      <link>//localhost:1313/posts/transform-aws-2/</link>
      <pubDate>Mon, 12 Aug 2024 14:40:04 +0100</pubDate>
      <guid>//localhost:1313/posts/transform-aws-2/</guid>
      <description>Replacing services Phase In this article, we will pick this AWS architecture: “a serverless exam generator application for educator,” analyse it and find an open-source alternative solution for each service AWS provides, so if you are interested keep it up if you want to know more.
To give a context of how architecture works: it starts with the educator reaching AWS Cognito to create an account either using social media account or a simple email and password.</description>
    </item>
    <item>
      <title>Transform AWS Exam Generator Architecture to Open Source Part #1: Introduction</title>
      <link>//localhost:1313/posts/transform-aws-1/</link>
      <pubDate>Mon, 12 Aug 2024 14:32:49 +0100</pubDate>
      <guid>//localhost:1313/posts/transform-aws-1/</guid>
      <description>Introduction Have you thought of creating an AWS architecture but with open-source projects?
In these articles, we will challenge ourselves and transform this AWS architecture: a serverless exam generator application for educators.
The solution enables educators to instantly create curriculum-aligned assessments with minimal effort. Students can take personalised quizzes and get immediate feedback on their performance.
We will transform and replace each service varying from Cognito, Lambda, DynamoDb, fargate…etc with its open-source counterpart and host it, where?</description>
    </item>
    <item>
      <title>Guardians of hell: hydra kratos oathkeeper</title>
      <link>//localhost:1313/posts/guardians_of_hell/</link>
      <pubDate>Mon, 01 Jul 2024 11:39:57 +0100</pubDate>
      <guid>//localhost:1313/posts/guardians_of_hell/</guid>
      <description>Introduction It&amp;rsquo;s been a nearly 3 months on my journey of learning kubernetes,&amp;hellip;.
One day I came across an architecture of AWS that includes AWS Cognito and ECS, if you have worked with AWS before, you would know that Cognito is a hosted authentication service which handles OAuth2/OIDC for you, To put it in a simpler way, it handles authentication and authorization to your AWS resources and provides different techniques to authenticate variying from Github, Google, etc.</description>
    </item>
    <item>
      <title>Oops...Etcd went down</title>
      <link>//localhost:1313/posts/etcd_went_down/</link>
      <pubDate>Thu, 30 May 2024 11:12:57 +0100</pubDate>
      <guid>//localhost:1313/posts/etcd_went_down/</guid>
      <description>Introduction with 1-Mistake On that shiny day, I got a project that required deploying a mongodb cluster, After a few searches, I found percona Operator, moved into installation section and copied the helm install command.
After installing the required charts, I noticed that the pods weren&amp;rsquo;t in &amp;ldquo;running&amp;rdquo; state, so as a civilized kubernetes developer I ran &amp;ldquo;kubectl describe pod_name -n namespace&amp;rdquo;, and it turned out the problem was mongodb cluster requires either 3 or 5 nodes</description>
    </item>
    <item>
      <title>Deploying gitea into kubernetes with custom domain</title>
      <link>//localhost:1313/posts/deploy-gitea-k8s/</link>
      <pubDate>Sat, 20 May 2023 16:12:38 +0100</pubDate>
      <guid>//localhost:1313/posts/deploy-gitea-k8s/</guid>
      <description>Introduction Hello, lately I have been trying to deploy a custom Docker image into my local Kubernetes cluster. It turned out I needed to host my Docker image on a container registry, either Docker Hub, which is not suitable for my use case, or deploy and use a local registry. During my research, I found Gitea, which I liked as it allows me to deploy all my projects on it and also host the containers.</description>
    </item>
    <item>
      <title>GCP -&gt; AWS Migration: Hide Your Secrets</title>
      <link>//localhost:1313/posts/hide-your-secrets/</link>
      <pubDate>Fri, 19 May 2023 16:14:49 +0100</pubDate>
      <guid>//localhost:1313/posts/hide-your-secrets/</guid>
      <description>HIDING</description>
    </item>
    <item>
      <title>GCP -&gt; AWS Migration: Confession</title>
      <link>//localhost:1313/posts/confession/</link>
      <pubDate>Tue, 25 Apr 2023 16:12:38 +0100</pubDate>
      <guid>//localhost:1313/posts/confession/</guid>
      <description>(Knock on the door)
(door opens)(some background noise of the company like people shatter or talk)
Yeah, Come In
Hey
Hey
Hey, my Junior friend, have a seat.
Thanks
It&amp;rsquo;s been 2 weeks since I assigned you the project, how it&amp;rsquo;s going?
Good, I&amp;rsquo;m doing good, I just finished a few tasks and as you asked about my progress.
So, can you tell me how much progress you have made?</description>
    </item>
    <item>
      <title>GCP -&gt; AWS Migration: Stress Swallows You</title>
      <link>//localhost:1313/posts/stress-swallows-you/</link>
      <pubDate>Thu, 20 Apr 2023 15:36:32 +0100</pubDate>
      <guid>//localhost:1313/posts/stress-swallows-you/</guid>
      <description>3 days passes, and I&amp;rsquo;m struggling on the same bug, Am I looking at the wrong side of the window, I don&amp;rsquo;t know, I think the best way to understand is going back and examine every command line and line of code I wrote.
So at first, After I took the decision to use AWS copilot, I look at the task on JIRA, analyzed it carefully and saw the need to deploy application dependencies first, one of the dependencies is the database .</description>
    </item>
    <item>
      <title>GCP -&gt; AWS Migration: Determination</title>
      <link>//localhost:1313/posts/determination/</link>
      <pubDate>Sun, 16 Apr 2023 16:05:46 +0100</pubDate>
      <guid>//localhost:1313/posts/determination/</guid>
      <description>You know that feeling ?, when you&amp;rsquo;re escaping a bad documentation, instead crawling around searching for a solution, and you find a snippet of code on Stack Overflow or Reddit, after you copy and paste it, it doesn&amp;rsquo;t work then your mind tells you &amp;ldquo;you need to change it a little bit&amp;rdquo;.
So you start changing the code to solve your problem, and guess what? A hell of a lot of new terminology and ideas enter your mind, and you start to get confused.</description>
    </item>
    <item>
      <title>GCP -&gt; AWS Migration: The Search</title>
      <link>//localhost:1313/posts/the-search/</link>
      <pubDate>Wed, 12 Apr 2023 15:28:36 +0100</pubDate>
      <guid>//localhost:1313/posts/the-search/</guid>
      <description>Key points wake up with an email deciding not to go to the workspace read the task description and start searching lay on the bed again, thinking of ways to approach the problem get up and write his thoughts in his journal Search again and find copilot as a solution his alarm bumps for taking a walk It&amp;rsquo;s 8:35 AM, and the phone started vibrating with notifications, he used to receive the &amp;ldquo;Good Morning Babe&amp;rdquo; message from his girlfriend with a few newsletters emails, but this time, it was an email on his Zoho mail with the Subject: [JIRA] Yassine assigned DEV-550 to you</description>
    </item>
    <item>
      <title>GCP -&gt; AWS Migration: The Beginning</title>
      <link>//localhost:1313/posts/the-beginning/</link>
      <pubDate>Mon, 10 Apr 2023 15:25:26 +0100</pubDate>
      <guid>//localhost:1313/posts/the-beginning/</guid>
      <description>Key Points: the boy is still an amateur, this is his first experience of him with DevOps the boy lacks some social skills the Startup CEO calls him he got the task of migrating the stack from GCP to AWS he returns confused and scared of not finding a solution then he goes back home, locks the room door and Lay on the bed imagining the way He was standing in front of the Nespresso machine, waiting for his daily caffeine fix, but his ears were inadvertently eavesdropping on the conversation of his two colleagues.</description>
    </item>
    <item>
      <title>Deployment Preview with AWS CloudFront</title>
      <link>//localhost:1313/posts/deployment-preview-with-aws-cloudfront/</link>
      <pubDate>Tue, 10 Jan 2023 11:39:04 +0100</pubDate>
      <guid>//localhost:1313/posts/deployment-preview-with-aws-cloudfront/</guid>
      <description>Introduction Deploy Previews allow you and your team to experience changes to any part of your site without having to publish them to production.
With a deploy previews feature you and your teammates can see the changes of every pull request you make without merging it, this will reduce the burden of rolling back the environment when bugs happen as you can review the changes before.
In this tutorial, you’ll learn about creating a CI pipeline with CodeBuild that gets triggered on every pull request creation or update, for every build we host react build folder on an S3 bucket and serve it with Cloudfront, finally after merging the pull request, we delete the build folder from S3.</description>
    </item>
  </channel>
</rss>
